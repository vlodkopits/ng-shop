{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/products.service.ts","webpack:///./src/app/shop-contacts/shop-contacts.component.css","webpack:///./src/app/shop-contacts/shop-contacts.component.html","webpack:///./src/app/shop-contacts/shop-contacts.component.ts","webpack:///./src/app/shop-nav/shop-nav.component.css","webpack:///./src/app/shop-nav/shop-nav.component.html","webpack:///./src/app/shop-nav/shop-nav.component.ts","webpack:///./src/app/shop-product/shop-product.component.css","webpack:///./src/app/shop-product/shop-product.component.html","webpack:///./src/app/shop-product/shop-product.component.ts","webpack:///./src/app/shop-products/shop-products.component.css","webpack:///./src/app/shop-products/shop-products.component.html","webpack:///./src/app/shop-products/shop-products.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".main-container {\\n    max-width: 1140px;\\n    margin: auto;\\n}\\nbutton {\\n    min-width: auto;\\n}\"","module.exports = \"<section class=\\\"main-container\\\">\\n  <app-shop-nav></app-shop-nav>\\n  <app-shop-products></app-shop-products>\\n  <app-shop-contacts></app-shop-contacts>\\n</section>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng-shop';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ShopNavComponent } from './shop-nav/shop-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { \n  MatToolbarModule, \n  MatButtonModule, \n  MatSidenavModule, \n  MatIconModule, \n  MatListModule , \n  MatMenuModule,\n  MatGridListModule,\n  MatProgressSpinnerModule,\n  MatDialogModule,\n  MatCardModule\n} from '@angular/material';\nimport { ShopProductsComponent } from './shop-products/shop-products.component';\nimport { ShopContactsComponent } from './shop-contacts/shop-contacts.component';\nimport { ShopProductComponent } from './shop-product/shop-product.component';\nimport { ProductsService } from './products.service';\nimport { HttpClientModule } from '@angular/common/http'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShopNavComponent,\n    ShopProductsComponent,\n    ShopContactsComponent,\n    ShopProductComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatGridListModule,\n    MatProgressSpinnerModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatCardModule\n  ],\n  entryComponents: [ShopProductComponent],\n  providers: [ProductsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Product } from './models/product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private http: HttpClient) { }\n\n  get products(): Observable<Product[]> {\n    return this.http.get<Product[]>('assets/products.json')\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>Contacts</h1>\\n<p>\\n  Somewhere on the planet Earth...\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shop-contacts',\n  templateUrl: './shop-contacts.component.html',\n  styleUrls: ['./shop-contacts.component.css']\n})\nexport class ShopContactsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 99;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n\\n  <span>Vydelka</span>\\n\\n  <span class=\\\"example-spacer\\\"></span>\\n\\n  <a href=\\\"#\\\" mat-button>Home</a>\\n\\n  <a href=\\\"#\\\" mat-button>Products</a>\\n\\n  <a href=\\\"#\\\" mat-button>Contacts</a>\\n\\n  <a href=\\\"#\\\" mat-button>Cart</a>\\n\\n</mat-toolbar>\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-shop-nav',\n  templateUrl: './shop-nav.component.html',\n  styleUrls: ['./shop-nav.component.css']\n})\nexport class ShopNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n    \n  constructor(private breakpointObserver: BreakpointObserver) {}\n  \n  }\n","module.exports = \"img {\\n    max-width: 100%;\\n}\\n\\n.product-modal {\\n    max-width: 350px;\\n}\"","module.exports = \"<div class=\\\"product-modal\\\">\\n  <ng-container *ngIf=\\\"!product\\\">\\n    <mat-spinner></mat-spinner>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"product\\\">\\n      <mat-card>\\n        <img mat-card-image src=\\\"{{'./assets/img/products/'+product.image}}\\\" alt=\\\"{{product.title}}\\\" />\\n        <mat-card-content>\\n          <h1>{{product.title}}</h1>\\n          <p>{{product.description}}</p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-raised-button (click)=\\\"closeDialog()\\\">Close</button>\\n          <button mat-raised-button color=\\\"primary\\\">${{product.price}} - Buy</button>\\n        </mat-card-actions>\\n      </mat-card>\\n  </ng-container>\\n</div>\"","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { Product } from '../models/product';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-shop-product',\n  templateUrl: './shop-product.component.html',\n  styleUrls: ['./shop-product.component.css']\n})\nexport class ShopProductComponent implements OnInit {\n  product: Product;\n\n  constructor(\n    private dialogRef: MatDialogRef<ShopProductComponent>,\n    @Inject(MAT_DIALOG_DATA) product\n  ) { \n    this.product = product;\n  }\n\n  ngOnInit() {\n    console.log(this.product);\n  }\n\n  closeDialog() {\n    this.dialogRef.close();\n}\n\n}\n","module.exports = \"\"","module.exports = \"<h1>Products</h1>\\n<mat-grid-list cols=\\\"3\\\" rowHeight=\\\"3:6\\\">\\n  <mat-grid-tile *ngFor=\\\"let product of products | async\\\">\\n    <ng-container *ngIf=\\\"!product\\\">\\n      <mat-spinner></mat-spinner>\\n    </ng-container>\\n    <mat-card *ngIf=\\\"product\\\">\\n        <img mat-card-image src=\\\"{{'/assets/img/products/'+product.image}}\\\" alt=\\\"{{product.title}}\\\" />\\n        <mat-card-content>\\n          <h1>{{product.title}}</h1>\\n          <p>{{product.description}}</p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n          <button mat-raised-button (click)=\\\"openDialog(product)\\\">Info</button>\\n          <button mat-raised-button color=\\\"primary\\\">${{product.price}} - Buy</button>\\n        </mat-card-actions>\\n    </mat-card>\\n  </mat-grid-tile>\\n</mat-grid-list>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ProductsService } from '../products.service';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { ShopProductComponent } from '../shop-product/shop-product.component';\n\n@Component({\n  selector: 'app-shop-products',\n  templateUrl: './shop-products.component.html',\n  styleUrls: ['./shop-products.component.css']\n})\nexport class ShopProductsComponent implements OnInit {\n  public products;\n\n  constructor(\n    private productList: ProductsService,\n    public dialog: MatDialog\n  ) { \n  }\n\n  ngOnInit() {\n    this.products = this.productList.products;\n  }\n\n  openDialog(product): void {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = product;\n    this.dialog.open(ShopProductComponent, dialogConfig);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}